apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: default
  labels:
    app: nginx
spec:
  replicas: 4
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      initContainers:
      - name: get-hostname
        image: ubuntu:latest
        command: ["/bin/sh", "-c"]
        args:
          - echo "<h1>"$(hostname)"</h1>" > /usr/share/nginx/html/index.html
        volumeMounts:
        - name: hostname
          mountPath: /usr/share/nginx/html
      containers:
      - name: nginx
        image: nginx:latest
        ports:
          - containerPort: 80
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
        volumeMounts:
        - name: hostname
          mountPath: /usr/share/nginx/html/index.html
          subPath: index.html
        - name: ssh-key
          mountPath: /root/.ssh
          readOnly: true
      volumes:
      - name: hostname
        emptyDir: {}
      - name: ssh-key
        secret:
          secretName: ssh-key
---

apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: default
spec:
  selector:
    app: nginx
  ports:
    - port: 80
      targetPort: 80
  type: ClusterIP 
  
---      
        
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx-ingress
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/server-alias: "nginx-test.k8s-24.sa"
spec:
  ingressClassName: nginx
  rules:
    - host: nginx-test.k8s-23.sa
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nginx-service
                port:
                  number: 80
